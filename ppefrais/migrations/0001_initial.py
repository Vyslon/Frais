# Generated by Django 3.1.5 on 2021-04-12 16:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import month.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Visiteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('adresse', models.CharField(blank=True, max_length=30)),
                ('code_postal', models.CharField(blank=True, max_length=5)),
                ('ville', models.CharField(blank=True, max_length=30)),
                ('date_embauche', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Visiteur médical',
                'verbose_name_plural': 'Visiteurs médicaux',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FicheFrais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(choices=[('CL', 'Saisie clôturée'), ('CR', 'Fiche créée, saisie en cours'), ('RB', 'Remboursée'), ('VA', 'Validée et mise en paiement')], default='CR', max_length=3)),
                ('mois', month.models.MonthField()),
                ('date_modif', models.DateField(auto_now=True)),
                ('visiteur', models.ForeignKey(default=None, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fiche de frais',
                'verbose_name_plural': 'Fiches de frais',
                'unique_together': {('mois', 'visiteur')},
            },
        ),
        migrations.CreateModel(
            name='LigneFraisHorsForfait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('montant', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('fiche', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='ppefrais.fichefrais')),
            ],
            options={
                'verbose_name': 'Ligne de frais (hors forfait)',
                'verbose_name_plural': 'Lignes de frais (hors forfait)',
            },
        ),
        migrations.CreateModel(
            name='LigneFraisForfait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frais_forfait', models.CharField(choices=[('ETP', 'Forfait étape'), ('KM', 'Frais kilométrique'), ('NUI', 'Nuitée hôtel'), ('REP', 'Repas restaurant')], max_length=3)),
                ('quantite', models.PositiveIntegerField(blank=True, default=0)),
                ('fiche', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='ppefrais.fichefrais')),
            ],
            options={
                'verbose_name': 'Ligne de frais',
                'verbose_name_plural': 'Lignes de frais',
                'unique_together': {('fiche', 'frais_forfait')},
            },
        ),
    ]
